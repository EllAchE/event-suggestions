generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TODO: this should be a cache and not a database table, where the cached queries

model query {
  id             Int              @id @unique @default(autoincrement())
  calendar_event calendar_event[]
  city           String?
  state          String?
  include_sports Boolean          @default(true)
  include_music  Boolean          @default(true) // TODO: improve the options here
  location       location?        @relation(fields: [location_id], references: [id])
  location_id    Int?
  created_at     DateTime         @default(now())
}

model calendar_event {
  id          Int      @id @unique @default(autoincrement())
  location    location @relation(fields: [location_id], references: [id])
  location_id Int
  description String
  title       String
  venue_name  String? // TODO: move to separate venue model
  // source      Source
  source      String
  start       String
  end         String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  query_id    Int
  query       query    @relation(fields: [query_id], references: [id])
}

model location {
  id             Int              @id @unique @default(autoincrement())
  country        String?
  address_line_1 String?
  address_line_2 String?
  lat            Decimal?
  long           Decimal?
  zip            String?
  state          String?
  city           String?
  events         calendar_event[]
  User           User[]
  query          query[]

  @@unique([city, state, address_line_1])
  @@unique([city, country, address_line_1])
  @@unique([lat, long]) // only one with lat/long
}

// enum Source {
//   SERPAPI
//   TICKETMASTER
//   MEETUP
// }

model User {
  id               Int      @id @unique @default(autoincrement())
  email            String // determine if this should be kept
  user_location_id Int
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  location         location @relation(fields: [location_id], references: [id])
  location_id      Int
}
